// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScreenTemperature;

#nullable disable

namespace ScreenTemperature.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("ScreenTemperature.Entities.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBinding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Alt")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Control")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Shift")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("KeyBindings");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBindingActions.KeyBindingAction", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KeyBindingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KeyBindingId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("ScreenTemperature.Entities.ScreenConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DevicePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("ScreenConfiguration");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBindingActions.ApplyConfiguration", b =>
                {
                    b.HasBaseType("ScreenTemperature.Entities.KeyBindingActions.KeyBindingAction");

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("ApplyConfigurationActions");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBindingActions.DecreaseBrightnessBy", b =>
                {
                    b.HasBaseType("ScreenTemperature.Entities.KeyBindingActions.KeyBindingAction");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.ToTable("DecreaseBrightnessByActions");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBindingActions.IncreaseBrightnessBy", b =>
                {
                    b.HasBaseType("ScreenTemperature.Entities.KeyBindingActions.KeyBindingAction");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.ToTable("IncreaseBrightnessByActions");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBindingActions.SetBrightnessTo", b =>
                {
                    b.HasBaseType("ScreenTemperature.Entities.KeyBindingActions.KeyBindingAction");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.ToTable("SetBrightnessToActions");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBindingActions.KeyBindingAction", b =>
                {
                    b.HasOne("ScreenTemperature.Entities.KeyBinding", "KeyBinding")
                        .WithMany("Actions")
                        .HasForeignKey("KeyBindingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KeyBinding");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.ScreenConfiguration", b =>
                {
                    b.HasOne("ScreenTemperature.Entities.Configuration", "Configuration")
                        .WithMany("ScreensConfigurations")
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBindingActions.ApplyConfiguration", b =>
                {
                    b.HasOne("ScreenTemperature.Entities.Configuration", "Configuration")
                        .WithMany()
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.Configuration", b =>
                {
                    b.Navigation("ScreensConfigurations");
                });

            modelBuilder.Entity("ScreenTemperature.Entities.KeyBinding", b =>
                {
                    b.Navigation("Actions");
                });
#pragma warning restore 612, 618
        }
    }
}
